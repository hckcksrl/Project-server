type User{
    id: Int!
    email: String!
    password: String
    project: [Project]
}
type Project{
    id: Int!
    projectName: String!
    subProject: [SubProject]
    userId: Int!
}
type SubProject{
    id: Int!
    SubProjectName: String!
    DetailList: [DetailList]
    ProjectId : Int!
}
type DetailList{
    id: Int!
    DetailName: String!
    SubProjectId: Int!
}
type Query{
    GetProject(id: Int!) : GetProjectRes
    GetSubProejct(id: Int!) : GetSubProjectRes
    GetDetailList(id: Int!) : GetDetailListRes
}
type Mutation{
    Login(email: String! , password: String!) : Boolean!
    Regist(email: String! , password : String!) : Boolean!
    CreateProject(projectName: String! , userId : Int!) : Boolean!
    EditProject(id: Int! ,projectName: String ) : Boolean!
    DeleteProject(id: Int!) : Boolean!
    CreateSubProject(SubProjectName: String! , ProjectId : Int!) : Boolean!
    EditSubProject()
    DeleteSubProject()
    CreateDetailProject()
    EditDetailProject()
    DeleteDetailProject()
}
type Boolean{
    result : Boolean!
}
type GetProjectRes {
    result : Boolean!
    error : String!
    project : Project
}
type GetSubProjectRes {
    result : Boolean!
    error : String
    subproject : SubProject
}
type GetDetailListRes {
    result : Boolean!
    error : String
    detail : DetailList
}