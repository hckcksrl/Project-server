
type DetailList{
    id: Int!
    detailname: String!
    subprojectid: Int!
}
type SubProject{
    id: Int!
    subprojectname: String!
    detaillist: [DetailList]
    projectid: Int!
}
type Project{
    id: Int!
    projectname: String!
    subproject: [SubProject]
    detaillist : [DetailList]
    userid: Int!
}
type User{
    id: Int!
    email: String!
    password: String
    project: [Project]
    subproject : [SubProject]
    detaillist : [DetailList]
}

type Query{
    GetProject(id: Int!) : GetProjectRes
    GetSubProject(id: Int!) : GetSubProjectRes
    GetDetailList(id: Int!) : GetDetailListRes
    GetUsers(id: Int!) : GetUserRes
}
type Mutation{
    Login(email: String! , password: String!) : AuthToken!
    Regist(email: String! , password: String!) : AuthToken!
    CreateProject(projectname: String! , userid: Int!) : ProjectRes!
    EditProject(id: Int! ,projectname: String ) : ProjectRes!
    DeleteProject(id: Int! userid : Int!) : ProjectRes!
    CompletedProject(id : Int) : ProjectRes!
    CreateSubProject(subprojectname: String! , projectid: Int!) : SubProjectRes!
    EditSubProject(id: Int! , subprojectname: String ) : SubProjectRes! 
    DeleteSubProject(id: Int!) : SubProjectRes!
    CompletedSubProject(id : Int) : SubProjectRes!
    CreateDetailProject(detailname: String! , subprojectid: Int!) : DetailRes!
    EditDetailProject(id: Int! , detailname: String) : DetailRes!
    DeleteDetailProject(id: Int!) : DetailRes!
    CompletedDetailProject(id : Int) : DetailRes!
}
type AuthToken{
    result: Boolean!
    error : String
    token : String
}
type GetProjectRes {
    result: Boolean!
    error: String
    project: Project
}
type GetSubProjectRes {
    result: Boolean!
    error: String
    subproject: SubProject
}
type GetDetailListRes {
    result: Boolean!
    error: String
    detail: DetailList
}
type GetUserRes {
    result : Boolean!
    error : String
    user : User
}
type ProjectRes{
    result : Boolean!
    error : String
}
type SubProjectRes{
    result : Boolean!
    error : String
}
type DetailRes{
    result : Boolean!
    error : String
}